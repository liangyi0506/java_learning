<!-- xml 方式写sql语句 -->
<!-- mybatis规定了如何写sql语句-->
<!DOCTYPE mapper
        PUBLIC "-//mabatis.org//DTO Mapper 3.0//EN"
        "https://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.liangyi.mapper.EmployeeMapper">

    <!-- id 唯一标识用一个namespace下的语句 -->
    <!-- resultType 是指的是返回值类型, 可以按照查询得到的字段自动映射,或者开启驼峰命名法后映射 -->
    <!-- resultMap 指的是主动映射,可以自己在mapper.xml 配置映射关系-->
    <select id="findById" resultType="com.liangyi.pojo.Employee">
        select emp_id empId,
               emp_name empName,
               emp_salary empSalary
        from
            t_emp
        where
<!--            emp_id = ${empId}-->
        emp_id = #{empId}
    </select>

    <delete id="deleteById" >
        delete
        from
            t_emp
        where emp_id = #{empID}
    </delete>

    <!-- 插入单个实体类的时候,连对象名都不能加,加了会报错,直接写属性值即可   -->
    <insert id="insertEmployee">
        insert into t_emp(emp_name, emp_salary) values(#{empName}, #{empSalary})
    </insert>

    <!-- 多个简单类型插入 -->
    <!-- 1. 在不指定名称的时候,直接写参数名即可 -->
    <!-- 2. 使用@param("指定的名称")的时候直接使用指定的名称 -->
    <!-- 3. 在不不指定的时候,还可以根据参数的顺序去表示参数arg0, arg1...-->

    <select id="findByIdAndName" resultType="com.liangyi.pojo.Employee">
        select
            emp_id empId,
            emp_name empName,
            emp_salary empSalary
        from
            t_emp
        where
            emp_id = #{id}
            and
            emp_name = #{name}
    </select>

<!--  有实体类的时候我们用实体类来接多个值 -->
<!--  在不存在实体类的时候使用map来承接值  -->
    <!-- 查询工资最高的员工的姓名和工资,以及部门的平均工资 -->
<!--  显然这个查询就没有实体类可以承接,所以直接用map  -->
    <select id="selectEmpNameAndMaxSalary" resultType="Map" >
        select
            emp_name `员工姓名`,
            emp_salary `员工工资`,
            (select avg(emp_salary) from t_emp1) `部门平均工资`
        from
            t_emp1
        where
            emp_salary = (select min(emp_salary) from t_emp1)
    </select>
</mapper>